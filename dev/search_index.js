var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = VLBISkyRegularizers","category":"page"},{"location":"#VLBISkyRegularizers","page":"Home","title":"VLBISkyRegularizers","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for VLBISkyRegularizers.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [VLBISkyRegularizers]","category":"page"},{"location":"#VLBISkyRegularizers.AbstractRegularizer","page":"Home","title":"VLBISkyRegularizers.AbstractRegularizer","text":"AbstractRegularizer\n\nMandatory fields\n\nhyperparameter::Number: the hyper parameter of the regularization function. In default, it should be a number.\ndomain::RegularizerDomain: the domain of the image space where the regularization function will be computed.\n\nMandatory methods\n\nevaluate(::AbstractRegularizerDomain, ::AbstractRegularizer, ::AbstractImageModel, ::AbstractArray):   Evaluate the regularization function for the given input sky image.\nevaluate(::AbstractRegularizer, ::AbstractImageModel, ::AbstractArray):   Evaluate the regularization function for the given input sky image.\ncost(::AbstractRegularizer, ::AbstractImageModel, ::AbstractArray):   Evaluate the cost function for the given input sky image. The cost function is defined by the product of its hyperparameter and regularization function.\n``\n\n\n\n\n\n","category":"type"},{"location":"#VLBISkyRegularizers.KLEntropy","page":"Home","title":"VLBISkyRegularizers.KLEntropy","text":"KLEntropy <: AbstractRegularizer\n\nRegularizer using the Kullback-Leibler divergence (or a relative entropy)\n\nfields\n\nhyperparameter::Number: the hyperparameter of the regularizer\nprior: the prior image\ndomain::AbstractRegularizerDomain: the image domain where the regularization funciton will be computed.   KLEntropy can be computed only in LinearDomain().\n\n\n\n\n\n","category":"type"},{"location":"#VLBISkyRegularizers.L1Norm","page":"Home","title":"VLBISkyRegularizers.L1Norm","text":"L1Norm <: AbstractRegularizer\n\nRegularizer using the l1-norm.\n\nfields\n\nhyperparameter::Number: the hyperparameter of the regularizer\nweight: the weight of the regularizer, which could be a number or an array.\ndomain::AbstractRegularizerDomain: the image domain where the regularization funciton will be computed. L1Norm can be computed only in LinearDomain().\n\n\n\n\n\n","category":"type"},{"location":"#VLBISkyRegularizers.TSV","page":"Home","title":"VLBISkyRegularizers.TSV","text":"TSV <: AbstractRegularizer\n\nRegularizer using the Isotropic Total Squared Variation.\n\nfields\n\nhyperparameter::Number: the hyperparameter of the regularizer\nweight: the weight of the regularizer, which could be a number or an array.\ndomain::AbstractRegularizerDomain: the image domain where the regularization funciton will be computed.\n\n\n\n\n\n","category":"type"},{"location":"#VLBISkyRegularizers.TV","page":"Home","title":"VLBISkyRegularizers.TV","text":"TV <: AbstractRegularizer\n\nRegularizer using the Isotropic Total Variation.\n\nfields\n\nhyperparameter::Number: the hyperparameter of the regularizer\nweight: the weight of the regularizer, which could be a number or an array.\ndomain::AbstractRegularizerDomain: the image domain where the regularization funciton will be computed. L1Norm can be computed only in LinearDomain().\n\n\n\n\n\n","category":"type"},{"location":"#VLBISkyRegularizers.WaveletL1Norm","page":"Home","title":"VLBISkyRegularizers.WaveletL1Norm","text":"Wavelet L1Norm <: AbstractRegularizer\n\nRegularizer using the l1-norm with a wavelet transform\n\nfields\n\nhyperparameter::Number: the hyperparameter of the regularizer\nweight: the weight of the regularizer, which could be a number or an array.\ndomain::AbstractRegularizerDomain: the image domain where the regularization funciton will be computed.\nlevels: number of levels to transform (can also give image, in which case the number of levels is calculated from the image size)\nwavelet: wavelet type\n\n\n\n\n\n","category":"type"},{"location":"#VLBISkyRegularizers.domain-Tuple{VLBISkyRegularizers.AbstractRegularizer}","page":"Home","title":"VLBISkyRegularizers.domain","text":"domain(reg::AbstractRegularizer) = reg.domain\n\nReturn the computing domain of the given regularizer.\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.evaluate-Tuple{LinearDomain, KLEntropy, AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}, AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}}","page":"Home","title":"VLBISkyRegularizers.evaluate","text":"evaluate(::AbstractRegularizer, skymodel::IntensityMap, x::IntensityMap)\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.evaluate-Tuple{LinearDomain, L1Norm, AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}, AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}}","page":"Home","title":"VLBISkyRegularizers.evaluate","text":"evaluate(::AbstractRegularizer, skymodel::IntensityMap, x::IntensityMap)\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.evaluate-Tuple{LinearDomain, TSV, AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}, AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}}","page":"Home","title":"VLBISkyRegularizers.evaluate","text":"evaluate(::AbstractRegularizer, skymodel::IntensityMap, x::IntensityMap)\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.evaluate-Tuple{LinearDomain, TV, AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}, AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}}","page":"Home","title":"VLBISkyRegularizers.evaluate","text":"evaluate(::AbstractRegularizer, skymodel::IntensityMap, x::IntensityMap)\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.evaluate-Tuple{LinearDomain, WaveletL1Norm, AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}, AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}}","page":"Home","title":"VLBISkyRegularizers.evaluate","text":"evaluate(::AbstractRegularizer, skymodel::IntensityMap, x::IntensityMap)\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.hyperparameter-Tuple{VLBISkyRegularizers.AbstractRegularizer}","page":"Home","title":"VLBISkyRegularizers.hyperparameter","text":"hyperparameter(reg::AbstractRegularizer) = reg.hyperparameter\n\nReturn the hyperparameter of the given regularizer.\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.klentropy_base-Tuple{AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}, AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}}","page":"Home","title":"VLBISkyRegularizers.klentropy_base","text":"klentropy_base(I::IntensityMap, p::IntensityMap)\n\nBase function of the l1norm.\n\nArguments\n\nI::IntensityMap: the image\np::IntensityMap: the prior image\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.l1norm-Tuple{AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}, Integer, Wavelets.WT.OrthoFilter}","page":"Home","title":"VLBISkyRegularizers.l1norm","text":"waveletl1norm(I::IntensityMap, levels::Integer, wavelet::OrthoFilter)\n\nBase function of the wavelet-l1norm.\n\nArguments\n\nI::IntensityMap: the image\nlevels::Integer: number of levels for wavelet transform\nwavelet::OrthoFilter: wavelet type\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.l1norm-Tuple{AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}, Number, Integer, Wavelets.WT.OrthoFilter}","page":"Home","title":"VLBISkyRegularizers.l1norm","text":"l1norm(I::IntensityMap, w::Number, levels::Integer, wavelet::OrthoFilter)\n\nBase function of the wavelet-l1norm.\n\nArguments\n\nI::IntensityMap: the image\nw::Number: the regularization weight\nlevels::Integer: number of levels for wavelet transform\nwavelet::OrthoFilter: wavelet type\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.l1norm-Tuple{AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}, Number}","page":"Home","title":"VLBISkyRegularizers.l1norm","text":"l1norm(I::IntensityMap, w::Number)\n\nBase function of the l1norm.\n\nArguments\n\nI::IntensityMap: the image\nw::Number: the regularization weight\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.l1norm-Tuple{AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}}","page":"Home","title":"VLBISkyRegularizers.l1norm","text":"l1norm(I::IntensityMap)\n\nBase function of the l1norm.\n\nArguments\n\nI::IntensityMap: the image\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.tsv_base-Tuple{AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}, Number}","page":"Home","title":"VLBISkyRegularizers.tsv_base","text":"tsv_base(I::IntensityMap, w::Number)\n\nBase function of the isotropic total squared variation.\n\nArguments\n\nI::IntensityMap: the image\n'w::Number' : the regularization weight\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.tsv_base-Tuple{AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}}","page":"Home","title":"VLBISkyRegularizers.tsv_base","text":"tsv_base(I::IntensityMap)\n\nBase function of the isotropic total squared variation.\n\nArguments\n\nI::IntensityMap: the image\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.tsv_base_pixel-Tuple{AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}, Integer, Integer}","page":"Home","title":"VLBISkyRegularizers.tsv_base_pixel","text":"tsv_base_pixel(I::AbstractArray, ix::Integer, iy::Integer)\n\nEvaluate the isotropic squared variation term for the given pixel\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.tv_base-Tuple{AbstractArray, Number}","page":"Home","title":"VLBISkyRegularizers.tv_base","text":"tv_base(I::IntensityMap, w::Number)\n\nBase function of the isotropic total variation.\n\nArguments\n\nI::IntensityMap: the image\n'w::Number' : the regularization weight\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.tv_base-Tuple{AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}}","page":"Home","title":"VLBISkyRegularizers.tv_base","text":"tv_base(I::IntensityMap)\n\nBase function of the isotropic total variation.\n\nArguments\n\nI::IntensityMap: the image\n\n\n\n\n\n","category":"method"},{"location":"#VLBISkyRegularizers.tv_base_pixel-Tuple{AxisKeys.KeyedArray{T, N, <:NamedDims.NamedDimsArray{<:Any, T, N, A}, G} where {T, N, A, G<:ComradeBase.AbstractDims}, Integer, Integer}","page":"Home","title":"VLBISkyRegularizers.tv_base_pixel","text":"tv_base_pixel(I::IntensityMap, ix::Integer, iy::Integer)\n\nEvaluate the isotropic variation term for the given pixel\n\nArguments\n\nI::IntensityMap: the image\n\n\n\n\n\n","category":"method"}]
}
