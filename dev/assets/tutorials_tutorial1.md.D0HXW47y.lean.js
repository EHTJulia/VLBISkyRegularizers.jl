import{_ as i,c as a,a5 as n,o as e}from"./chunks/framework.D_L22HIa.js";const p="/VLBISkyRegularizers.jl/dev/assets/cxlmrgx.COwkURID.png",E=JSON.parse('{"title":"Full Visibilities Imaging","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/tutorial1.md","filePath":"tutorials/tutorial1.md","lastUpdated":null}'),t={name:"tutorials/tutorial1.md"};function l(h,s,k,d,r,g){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="Full-Visibilities-Imaging" tabindex="-1">Full Visibilities Imaging <a class="header-anchor" href="#Full-Visibilities-Imaging" aria-label="Permalink to &quot;Full Visibilities Imaging {#Full-Visibilities-Imaging}&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Status \`~/work/VLBISkyRegularizers.jl/VLBISkyRegularizers.jl/examples/Project.toml\`</span></span>
<span class="line"><span>⌃ [13f3f980] CairoMakie v0.12.5</span></span>
<span class="line"><span>⌃ [99d987ce] Comrade v0.10.4</span></span>
<span class="line"><span>  [0b91fe84] DisplayAs v0.1.6</span></span>
<span class="line"><span>⌃ [31c24e10] Distributions v0.25.109</span></span>
<span class="line"><span>⌃ [7da242da] Enzyme v0.12.31</span></span>
<span class="line"><span>⌃ [7f7a1694] Optimization v3.27.0</span></span>
<span class="line"><span>  [42dfb2eb] OptimizationOptimisers v0.2.1</span></span>
<span class="line"><span>  [3d61700d] Pyehtim v0.1.3</span></span>
<span class="line"><span>  [860ef19b] StableRNGs v1.0.2</span></span>
<span class="line"><span>  [2913bbd2] StatsBase v0.34.3</span></span>
<span class="line"><span>⌃ [fd094767] Suppressor v0.2.7</span></span>
<span class="line"><span>  [272825ce] VLBISkyRegularizers v1.0.0-DEV \`~/work/VLBISkyRegularizers.jl/VLBISkyRegularizers.jl\`</span></span>
<span class="line"><span>  [b77e0a4c] InteractiveUtils</span></span>
<span class="line"><span>  [56ddb016] Logging</span></span>
<span class="line"><span>Info Packages marked with ⌃ have new versions available and may be upgradable.</span></span>
<span class="line"><span>nothing</span></span></code></pre></div><h2 id="Loading-the-Data" tabindex="-1">Loading the Data <a class="header-anchor" href="#Loading-the-Data" aria-label="Permalink to &quot;Loading the Data {#Loading-the-Data}&quot;">​</a></h2><p>We start by loading Comrade and VLBISkyRegularizers.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Comrade</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> VLBISkyRegularizers</span></span></code></pre></div><p>We use Pyehtim to load the uvfits files.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pyehtim</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\x1B[33m\x1B[1m┌ \x1B[22m\x1B[39m\x1B[33m\x1B[1mWarning: \x1B[22m\x1B[39mModule SciMLBase with build ID fafbfcfd-c24d-fca5-0000-004b1aa0cd12 is missing from the cache.</span></span>
<span class="line"><span>\x1B[33m\x1B[1m│ \x1B[22m\x1B[39mThis may mean SciMLBase [0bca4576-84f4-4d90-8ffe-ffa030f20462] does not support precompilation but is imported by a module that does.</span></span>
<span class="line"><span>\x1B[33m\x1B[1m└ \x1B[22m\x1B[39m\x1B[90m@ Base loading.jl:1948\x1B[39m</span></span>
<span class="line"><span>\x1B[33m\x1B[1m┌ \x1B[22m\x1B[39m\x1B[33m\x1B[1mWarning: \x1B[22m\x1B[39mModule BangBang with build ID fafbfcfd-7e12-50d4-0000-00459fb53c4a is missing from the cache.</span></span>
<span class="line"><span>\x1B[33m\x1B[1m│ \x1B[22m\x1B[39mThis may mean BangBang [198e06fe-97b7-11e9-32a5-e1d131e6ad66] does not support precompilation but is imported by a module that does.</span></span>
<span class="line"><span>\x1B[33m\x1B[1m└ \x1B[22m\x1B[39m\x1B[90m@ Base loading.jl:1948\x1B[39m</span></span>
<span class="line"><span>\x1B[33m\x1B[1m┌ \x1B[22m\x1B[39m\x1B[33m\x1B[1mWarning: \x1B[22m\x1B[39mModule Comrade with build ID fafbfcfd-f82d-34a3-0000-007be2c79b20 is missing from the cache.</span></span>
<span class="line"><span>\x1B[33m\x1B[1m│ \x1B[22m\x1B[39mThis may mean Comrade [99d987ce-9a1e-4df8-bc0b-1ea019aa547b] does not support precompilation but is imported by a module that does.</span></span>
<span class="line"><span>\x1B[33m\x1B[1m└ \x1B[22m\x1B[39m\x1B[90m@ Base loading.jl:1948\x1B[39m</span></span></code></pre></div><p>We also use a stable random number generator</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StableRNGs</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rng </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> StableRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>StableRNGs.LehmerRNG(state=0x000000000000000000000000000000c9)</span></span></code></pre></div><p>Load the observation data with Pyehtim and do some preprocessing</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> joinpath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(__DIR, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;L2V1_M87_2018_111_b3_hops_netcal_10s_StokesI.uvfits&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">obseht </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ehtim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">obsdata</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_uvfits</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">obs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pyehtim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scan_average</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obseht)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_fractional_noise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Python: &lt;ehtim.obsdata.Obsdata object at 0x7fdb612c1390&gt;</span></span></code></pre></div><p>Extract the visibilities from the obsdata object</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dvis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> extract_table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Visibilities</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>EHTObservationTable{Comrade.EHTVisibilityDatum{:I}}</span></span>
<span class="line"><span>  source:      M87</span></span>
<span class="line"><span>  mjd:         58228</span></span>
<span class="line"><span>  bandwidth:   1.856e9</span></span>
<span class="line"><span>  sites:       [:AA, :AX, :GL, :LM, :MG, :MM, :PV, :SW]</span></span>
<span class="line"><span>  nsamples:    339</span></span></code></pre></div><h2 id="Build-sky-model" tabindex="-1">Build sky model <a class="header-anchor" href="#Build-sky-model" aria-label="Permalink to &quot;Build sky model {#Build-sky-model}&quot;">​</a></h2><p>We build a model consisting of a raster of pixels and an extended Gaussian component. The pixel raster is convolved with a pulse to make a <code>ContinuousImage</code> object. The Gaussian component is used to model the zero baselines. The sky model consists of two components, <code>θ</code> and <code>metadata</code>. <code>θ</code> is a NamedTuple with parameters we want to fit. <code>impixel</code> here is the pixel raster, and <code>fg</code> controls the relative scaling between the raster and the Gaussian component. <code>metadata</code> is also a NamedTuple with constant parameters. <code>ftot</code> controls the total flux scaling, <code>pulse</code> is the pulse with which the pixel raster is convolved, and <code>regularizers</code> is the set of regularizers we will be using.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sky</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(θ, metadata)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (; impixel, fg) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> θ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (; ftot, pulse, regs) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> metadata</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Transform image to the image simplex domain and scale</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rast </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ftot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fg)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">transform_image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">image_domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(regs), impixel)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# Form the image</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    img </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rast, VLBISkyRegularizers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(regs))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ContinuousImage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img, pulse)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Add an extended Gaussian</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gauss </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> modify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Gaussian</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Stretch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">μas2rad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">250.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Renormalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ftot))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gauss</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sky (generic function with 1 method)</span></span></code></pre></div><h2 id="Define-Image-and-Regularizers" tabindex="-1">Define Image and Regularizers <a class="header-anchor" href="#Define-Image-and-Regularizers" aria-label="Permalink to &quot;Define Image and Regularizers {#Define-Image-and-Regularizers}&quot;">​</a></h2><p>Next, we define the grid on which our image model will exist.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fov </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 150</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> npix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 32</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">grid_p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> imagepixels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">μas2rad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fov), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">μas2rad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fov), npix, npix)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>RectiGrid(</span></span>
<span class="line"><span>executor: ComradeBase.Serial()</span></span>
<span class="line"><span>Dimensions: </span></span>
<span class="line"><span>(↓ X Sampled{Float64} LinRange{Float64}(-3.5224744018114725e-10, 3.5224744018114725e-10, 32) ForwardOrdered Regular Points,</span></span>
<span class="line"><span>→ Y Sampled{Float64} LinRange{Float64}(-3.5224744018114725e-10, 3.5224744018114725e-10, 32) ForwardOrdered Regular Points)</span></span>
<span class="line"><span>)</span></span></code></pre></div><p>Now we define the regularizers we want to use. The available regulariers are:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subtypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AbstractRegularizer)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>8-element Vector{Any}:</span></span>
<span class="line"><span> AddRegularizer</span></span>
<span class="line"><span> KLE</span></span>
<span class="line"><span> L1</span></span>
<span class="line"><span> PSDistance</span></span>
<span class="line"><span> TSV</span></span>
<span class="line"><span> TV</span></span>
<span class="line"><span> WaveletL1</span></span>
<span class="line"><span> WeightRegularizer</span></span></code></pre></div><p>Each regularizer must be passed with four arguments: the hyperparameter, the image domain, the evaluation domain, and the grid. The hyperparameter defines the weight of the regularizer, the image domain defines the domain to which the image will be transformed, the evaluation domain defines the domain on which the regularizer will be evaluated, and the grid defines the grid of pixels on which the regularizer will be evaluated. The available <a href="/VLBISkyRegularizers.jl/dev/api#Domains">domains</a> are:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subtypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AbstractDomain)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>7-element Vector{Any}:</span></span>
<span class="line"><span> ALRDomain</span></span>
<span class="line"><span> CLRDomain</span></span>
<span class="line"><span> LinearDomain</span></span>
<span class="line"><span> LogDomain</span></span>
<span class="line"><span> ParameterDomain</span></span>
<span class="line"><span> PolarizationDomain</span></span>
<span class="line"><span> VLBISkyRegularizers.PSDDomain</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Note</p><p>When using multiple regularizers, the image domains and grids of all regularizers must match.</p></div><p>We will use a TSV regularizer in the log domain and a wavelet-space L1-norm regularizer in the linear domain, and have a log image domain.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> TSV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LinearDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), grid_p)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> WaveletL1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LinearDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ParameterDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), grid_p)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">regs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r2</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Added Regularizer:</span></span>
<span class="line"><span>   Regularizer 1:</span></span>
<span class="line"><span>      Regularizer:          TSV</span></span>
<span class="line"><span>      Hyperparameter:       1</span></span>
<span class="line"><span>      Evaluation Domain:    LogDomain()</span></span>
<span class="line"><span>   Regularizer 2:</span></span>
<span class="line"><span>      Regularizer:          Wavelet L1</span></span>
<span class="line"><span>      Hyperparameter:       1</span></span>
<span class="line"><span>      Evaluation Domain:    ParameterDomain()</span></span>
<span class="line"><span>      Wavelet:              Full db2</span></span>
<span class="line"><span>   Image Domain:   LinearDomain()</span></span>
<span class="line"><span>   Grid FOV:             150.0x150.0 μas</span></span>
<span class="line"><span>   Grid Size:            32x32</span></span></code></pre></div><h2 id="Build-Posterior" tabindex="-1">Build Posterior <a class="header-anchor" href="#Build-Posterior" aria-label="Permalink to &quot;Build Posterior {#Build-Posterior}&quot;">​</a></h2><p>Now we build our sky model.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Distributions</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skymeta </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (;ftot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, pulse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BSplinePulse{3}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), regs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regs)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skyprior </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    impixel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">regs,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Uniform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skymodel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sky, skyprior, grid_p, metadata</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skymeta)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SkyModel</span></span>
<span class="line"><span>  with map: sky</span></span>
<span class="line"><span>   on grid: ComradeBase.RectiGrid</span></span></code></pre></div><p>And next our intstrument model.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SingleStokesGain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gp)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">intpr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); LM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiagonalVonMises</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">π</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))); refant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SEFDReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), phase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">intmodel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> InstrumentModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(G, intpr)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>InstrumentModel</span></span>
<span class="line"><span>  with Jones: SingleStokesGain</span></span>
<span class="line"><span>  with reference basis: PolarizedTypes.CirBasis()</span></span></code></pre></div><p>Now we can make our posterior.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">post </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(skymodel, intmodel, dvis)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>VLBIPosterior</span></span>
<span class="line"><span>ObservedSkyModel</span></span>
<span class="line"><span>  with map: sky</span></span>
<span class="line"><span>   on grid: VLBISkyModels.FourierDualDomainObservedInstrumentModel</span></span>
<span class="line"><span>  with Jones: SingleStokesGain</span></span>
<span class="line"><span>  with reference basis: PolarizedTypes.CirBasis()Data Products: Comrade.EHTVisibilityDatum</span></span></code></pre></div><h2 id="Image-Reconstruction" tabindex="-1">Image Reconstruction <a class="header-anchor" href="#Image-Reconstruction" aria-label="Permalink to &quot;Image Reconstruction {#Image-Reconstruction}&quot;">​</a></h2><p>We use the <a href="/VLBISkyRegularizers.jl/dev/api#VLBISkyRegularizers.solve_opt"><code>solve_opt</code></a> function to solve for the MAP estimate. By default, this uses an Adam optimizer from the <code>OptimizationOptimisers.jl</code> package and automatic differentiation with Enzyme from the <code>Optimization.jl</code> package. This function runs the optimization <code>ntrials</code> number of times. Each optimization trial first runs half of <code>maxiters</code> number of iterations, adds some random noise, then runs <code>maxiters</code> iterations from that point. The output values are sorted by order of objective value.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Optimization</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OptimizationOptimisers</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Enzyme</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">solve_opt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post, Optimisers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Adam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), Optimization</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AutoEnzyme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); ntrials</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxiters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10_000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>(@NamedTuple{sky::@NamedTuple{impixel::Matrix{Float64}, fg::Float64}, instrument::@NamedTuple{lg::Comrade.SiteArray{Float64, 1, Vector{Float64}, Vector{Comrade.IntegrationTime{Float64}}, FillArrays.Fill{Float64, 1, Tuple{Base.OneTo{Int64}}}, Vector{Symbol}}, gp::Comrade.SiteArray{Float64, 1, Vector{Float64}, Vector{Comrade.IntegrationTime{Float64}}, FillArrays.Fill{Float64, 1, Tuple{Base.OneTo{Int64}}}, Vector{Symbol}}}}[(sky = (impixel = [0.014116881532772881 0.014777348727080645 … 0.01928854389001646 0.01669730603028104; 0.01505454278668511 0.01576975748986589 … 0.019111485626086586 0.0161713022013274; … ; 0.042272395180912525 0.04278591819471418 … 0.04124726158080567 0.034855794542158335; 0.03722135770597106 0.03816550957356247 … 0.03658272823542657 3.0729314908842665e-5], fg = 0.010141558999722994), instrument = (lg = [0.04489238204647651, -0.04606488786268801, 0.3470290050730102, -0.022038531834720758, 0.02262126731612938, 0.4036955614195387, 0.04122279280137001, -0.04140931310657406, -0.41630675517520277, 0.11141481523298999  …  0.079825067546233, 0.011147081592849025, -0.005309780300181497, 0.04158697906021826, -0.037676577401611885, -0.23679753741417786, -0.017909345620873693, 0.05189485939983817, 0.017688703602043946, -0.00875819102976772], gp = [0.0, -0.011845868156976034, 1.720140350167542, 0.0, 0.00817141599764446, 1.6938804603926274, 0.0, 0.003144109471192846, 0.5120597583927129, 1.632119407923321  …  -0.04401939041434011, 0.7423009347864573, 2.4433389604712628, 0.0, -0.007501962465781716, 8.035437017197811, -2.422351205594254, -0.06196343157542439, 0.7082278243311373, 2.4207586442959976])), (sky = (impixel = [0.013441215266534676 0.015548354342624054 … 0.02707289832058558 0.024435013204324972; 0.01539014379228806 0.017777575602651613 … 0.029731759959913267 0.028589881846785164; … ; 0.027361134001015235 0.03643422970704207 … 0.014264753666071477 0.012822436718106869; 0.022568201120293403 0.033584230917270336 … 0.012192195764841084 3.0240703147351368e-5], fg = 0.009519817709150594), instrument = (lg = [0.040097957190886296, -0.04191010537120548, 0.22721999414497276, -0.022174532935162604, 0.022287908668420172, 0.30786256830109054, 0.029700790665919602, -0.03142785178247717, -0.2745971018096853, 0.09322850382923188  …  0.1094489427583667, 0.01186223178355275, -0.003967101492655268, 0.0422502458025887, -0.03864964693818655, -0.0029971448063534035, 0.010756327462598263, 0.08238603141016752, 0.0213408370409757, -0.006407302427419483], gp = [0.0, -0.012842261475362103, -1.6870798194698418, 0.0, 0.0069189889759192266, -1.7290458709809853, 0.0, 0.0021612287947506536, -0.43213664974020793, -1.8315197598750144  …  1.3846039805665704, -3.9511150346761874, -2.2503796674263072, 0.0, -0.007338519881097632, -4.963865659122968, 0.5130051553624224, 1.4031081744930898, -3.936079943667181, -2.223500473300341])), (sky = (impixel = [0.015280592835368602 0.016888818125155476 … 0.03130646171660247 0.033017023239183756; 0.016476775633160592 0.01854480135445185 … 0.026951315322809963 0.028166828154406236; … ; 0.020949864649752275 0.019160442830889746 … 0.01917678438286594 0.01780645495968482; 0.020075141495790882 0.019211232338352868 … 0.018032600184138537 0.000853801091354461], fg = 0.0138143122730759), instrument = (lg = [0.04243677172789193, -0.043854345333596986, 0.2937452088940615, -0.020995131151342352, 0.021441367960363573, 0.3696426308886042, 0.040817057482141234, -0.04110249741496388, -0.3886218975333081, 0.13196341666322825  …  0.046641599489931976, 0.01209030941896644, -0.003308257462947773, 0.05260021238174424, -0.04669953793478552, -0.06532886905375648, -0.07021448243535963, 0.0122548387062525, 0.02222089760741121, -0.005340893750370735], gp = [0.0, -0.01241046231188238, 2.7109806031010253, 0.0, 0.008060508895743597, 2.7183913809693414, 0.0, 0.0026745293824776504, -0.09310167299963205, 2.741227800044074  …  -3.087535375622896, -2.243142585778503, -0.5421365037860262, 0.0, -0.006998817835539079, -1.162115596416734, 1.9156520395319696, -3.064317533887305, -2.235831771824322, -0.5233557971464764])), (sky = (impixel = [0.051425696812565466 0.06475872803906368 … 0.018211615955449054 0.01577979367541639; 0.07208025507861712 0.08631707090475153 … 0.019885954384702982 0.017119242192147298; … ; 0.012778017916469861 0.013668189487316655 … 0.00381376588987237 0.003451530960739808; 0.012512988972101428 0.01360827308072558 … 0.003533341927671574 -0.000297645862500775], fg = 0.015803390701168377), instrument = (lg = [0.04177405821399194, -0.04330546970351625, 0.2712813326794514, -0.020590909395077534, 0.02095700628839115, 0.3537031376989496, 0.02783137707982636, -0.02967921446286997, -0.3948666430699576, 0.13884614171973197  …  0.09966989297601339, 0.011270927563175194, -0.005302286116112987, 0.052726342122735415, -0.04673563134316933, 0.06621099342679113, -0.2801398476845709, 0.06265838172488969, 0.021891934865992613, -0.006292747159763147], gp = [0.0, -0.01288713221565279, -0.2877696472906244, 0.0, 0.007249201942704609, -0.3020219704073036, 0.0, 0.0021971830605524607, 1.1577281058769415, -0.33909576049638535  …  0.2765735051441467, 0.20213443852951674, 1.9032294829529983, 0.0, -0.006471082650920775, -6.305809937410017, -0.2506013964024031, 0.3303626274378504, 0.24240617637911366, 1.9546735013226877])), (sky = (impixel = [0.009495653929475802 0.009553918377790186 … 0.018653688241786995 0.019581683720821162; 0.009611069539436199 0.009611059909862172 … 0.020869904904270355 0.02409703537634546; … ; 0.013517867586278116 0.013014326889236278 … 0.006589827140816798 0.006556213260172392; 0.012774050682595697 0.01234779095467627 … 0.0065476242867046845 0.15207484573159447], fg = 0.024147653034550437), instrument = (lg = [0.04130538328457871, -0.04292728760016511, 0.25879590364472504, -0.0211015551315059, 0.02136814128878209, 0.34018959979702634, 0.03675607574922615, -0.03755831629585652, -0.42468848447183916, 0.11470804780734008  …  0.03434638092598969, 0.010770707615055702, -0.006614295348504435, 0.04331699029544688, -0.03922960383902749, -0.19207341478484163, -0.17995621692107724, 0.004314486591638323, 0.01967256757777385, -0.009262151128626557], gp = [0.0, -0.012542730277176761, 0.23964021510856776, 0.0, 0.008610804456515119, 0.28496446769177836, 0.0, 0.0028466089575114525, 2.2898392411853163, 0.3994724524939677  …  2.027752503179682, -1.5431312734677836, 0.1581862625431607, 0.0, -0.006529459493124263, -2.8983327387650273, 0.9877998699043422, 2.062756623132175, -1.539673093710795, 0.17271151730068462]))], [2039.042069660225, 2032.0132279102982, 2030.3593215491917, 557.1642661110371, -208.26492040794975])</span></span></code></pre></div><p>Now we plot the MAP estimate.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">grid_plot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> imagepixels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">μas2rad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fov), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">μas2rad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fov), npix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, npix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">img </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> intensitymap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Comrade</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skymodel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post, xopts[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), grid_plot)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> imageviz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img);</span></span></code></pre></div><p><img src="`+p+'" alt=""></p><hr><p><em>This page was generated using <a href="https://github.com/fredrikekre/Literate.jl" target="_blank" rel="noreferrer">Literate.jl</a>.</em></p>',54)]))}const c=i(t,[["render",l]]);export{E as __pageData,c as default};
